<launch>

	<arg name="debug" default="false"/>
	<arg name="use_gui" default="false" />
	<arg name="db" default="false" />
	<arg name="db_path" default="$(find panda_moveit_config)/default_warehouse_mongo_db" />


	<include file="/home/robproj/grp10_ws/src/grp10_package/panda_moveit_config/launch/planning_context.launch">
		<arg name="load_robot_description" value="true"/>
	</include>


	<!-- Run Rviz and load the default config to see the state of the move_group node -->
	<include file="$(find panda_moveit_config)/launch/moveit_rviz.launch">
		<arg name="config" value="true"/>
		<arg name="debug" value="$(arg debug)"/>
	</include>

	<!-- We do not have a robot connected, so publish fake joint states -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="use_gui" value="$(arg use_gui)"/>
		<rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
	</node>

	<!-- Given the published joint states, publish tf for the robot links -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

	<!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
	<include file="$(find panda_moveit_config)/launch/move_group.launch">
		<arg name="allow_trajectory_execution" value="true"/>
		<arg name="fake_execution" value="true"/>
		<arg name="info" value="true"/>
		<arg name="debug" value="$(arg debug)"/>
	</include>


	<!-- If database loading was enabled, start mongodb as well -->
	<include file="$(find panda_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
		<arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
	</include>




	<node name="panda_controller"
		pkg="grp10_package"
		type="panda_controller"
		respawn="false" output="screen">

		<rosparam command="load"
			file="/home/robproj/grp10_ws/src/grp10_package/panda_moveit_config/config/kinematics.yaml"/>

	</node>
</launch>
